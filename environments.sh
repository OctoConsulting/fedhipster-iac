#DEV environments
NAMESPACE=dev
DEV_APP_URL=$(kubectl -n $NAMESPACE get svc/app -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $DEV_APP_URL ]; then
    sleep 5
    DEV_APP_URL=$(kubectl -n $NAMESPACE get svc/app -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
DEV_MICRO_URL=$(kubectl -n $NAMESPACE get svc/micro -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $DEV_MICRO_URL ]; then
    sleep 5
    DEV_MICRO_URL=$(kubectl -n $NAMESPACE get svc/micro -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
DEV_KEYCLOAK_URL=$(kubectl -n $NAMESPACE get svc/keycloak -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $DEV_KEYCLOAK_URL ]; then
    sleep 5
    DEV_KEYCLOAK_URL=$(kubectl -n $NAMESPACE get svc/keycloak -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
echo "Finished getting $NAMESPACE environment info"

#STAGE environments
NAMESPACE=stage
STAGE_APP_URL=$(kubectl -n $NAMESPACE get svc/app -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $STAGE_APP_URL ]; then
    sleep 5
    STAGE_APP_URL=$(kubectl -n $NAMESPACE get svc/app -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
STAGE_MICRO_URL=$(kubectl -n $NAMESPACE get svc/micro -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $STAGE_MICRO_URL ]; then
    sleep 5
    STAGE_MICRO_URL=$(kubectl -n $NAMESPACE get svc/micro -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
STAGE_KEYCLOAK_URL=$(kubectl -n $NAMESPACE get svc/keycloak -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $STAGE_KEYCLOAK_URL ]; then
    sleep 5
    STAGE_KEYCLOAK_URL=$(kubectl -n $NAMESPACE get svc/keycloak -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
echo "Finished getting $NAMESPACE environment info"

#PROD environments
NAMESPACE=prod
PROD_APP_URL=$(kubectl -n $NAMESPACE get svc/app -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $PROD_APP_URL ]; then
    sleep 5
    PROD_APP_URL=$(kubectl -n $NAMESPACE get svc/app -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
PROD_MICRO_URL=$(kubectl -n $NAMESPACE get svc/micro -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $PROD_MICRO_URL ]; then
    sleep 5
    PROD_MICRO_URL=$(kubectl -n $NAMESPACE get svc/micro -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
PROD_KEYCLOAK_URL=$(kubectl -n $NAMESPACE get svc/keycloak -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $PROD_KEYCLOAK_URL ]; then
    sleep 5
    PROD_KEYCLOAK_URL=$(kubectl -n $NAMESPACE get svc/keycloak -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
echo "Finished getting $NAMESPACE environment info"

#CI/CD environments
NAMESPACE=default
HELM_RELEASE=cicd
for i in {1..10}
do
  if [ -z $JENKINS_URL ]; then
    sleep 5
    JENKINS_URL=$(kubectl -n $NAMESPACE get svc $HELM_RELEASE-jenkins -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
JENKINS_PASS=$(kubectl -n $NAMESPACE get secret $HELM_RELEASE-jenkins -o jsonpath="{.data.jenkins-admin-password}" | base64 --decode)
SONAR_URL=$(kubectl -n $NAMESPACE get svc $HELM_RELEASE-sonarqube -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $SONAR_URL ]; then
    sleep 5
    SONAR_URL=$(kubectl -n $NAMESPACE get svc $HELM_RELEASE-sonarqube -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
echo "Finished getting CI/CD environment info"

#Monitoring environments
NAMESPACE=grafana
GRAFANA_URL=$(kubectl -n $NAMESPACE get svc grafana -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
for i in {1..10}
do
  if [ -z $GRAFANA_URL ]; then
    sleep 5
    GRAFANA_URL=$(kubectl -n $NAMESPACE get svc grafana -o json | grep hostname | sed 's|.*: \(.*\)|\1|;s/"//g')
  else
    break
  fi
done
GRAFANA_PASS=$(kubectl -n $NAMESPACE get secret grafana -o jsonpath="{.data.admin-password}" | base64 --decode)
echo "Finished getting monitoring environment info"

echo "Below is a list of environments generated by our one-click script.
If you have just executed the one-click, it may take up to 10 minutes for the environments to come up on the ELBs.

**PROD**
Webapp:    ${PROD_APP_URL}
Micro:     ${PROD_MICRO_URL}
Keycloak:  ${PROD_KEYCLOAK_URL}
Logins:    admin / admin

**STAGE**
Webapp:    ${STAGE_APP_URL}
Micro:     ${STAGE_MICRO_URL}
Keycloak:  ${STAGE_KEYCLOAK_URL}
Logins:    admin / admin

**DEV**
Webapp:    ${DEV_APP_URL}
Micro:     ${DEV_MICRO_URL}
Keycloak:  ${DEV_KEYCLOAK_URL}
Logins:    admin / admin

**CI/CD**
Jenkins:   ${JENKINS_URL}
Login:     admin / $JENKINS_PASS

SonarQube: ${SONAR_URL}
Login:     admin / admin

**Monitoring**
Grafana:   $GRAFANA_URL
Login:     admin / $GRAFANA_PASS" > environments.txt

echo "Finished generating environment info txt file"

#open http://${PROD_APP_URL}
